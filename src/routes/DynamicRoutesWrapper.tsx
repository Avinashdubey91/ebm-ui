import React, { useMemo, useEffect } from 'react';
import { useMenuData } from '../features/dashboard/hooks/useMenuData';
import { generateRoutes } from '../utils/generateRoutes';
import { useRoutes } from 'react-router-dom';

const DynamicRoutesWrapper: React.FC = () => {
  const { menus, loading } = useMenuData();

  // ✅ Log what useMenuData returned
  useEffect(() => {
    console.log("🌀 useMenuData loading:", loading);
    console.log("📦 Menus from DB:", menus);
  }, [menus, loading]);

  const dynamicRoutes = useMemo(() => {
    const routes = loading ? [] : generateRoutes(menus);
    console.log("🧭 Routes generated by generateRoutes():", routes);

    routes.forEach(route => {
      console.log(`▶️ Parent Route: /${route.path}`);
      if (route.children?.length) {
        route.children.forEach(child => {
          console.log(`   └── /${route.path}/${child.path}`);
        });
      }
    });

    return routes;
  }, [menus, loading]);

  const element = useRoutes(dynamicRoutes);

  if (loading) {
    return <div className="text-center p-4">Loading routes...</div>;
  }

  return element ?? <div className="alert alert-danger text-center m-5 fw-bold fs-3">🚫 No Routes Available</div>;
};

export default DynamicRoutesWrapper;
